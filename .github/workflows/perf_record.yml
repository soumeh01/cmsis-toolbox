# name: performance

# on:
#   pull_request:
#     paths:
#       - '.github/workflows/perf_record.yml'
#       - '.github/matrix_includes.json'
#       - '!test/performance/**'
#       - '!**/*.md'
#   workflow_dispatch:

# concurrency:
#   group: ${{ github.workflow }}-${{ github.ref }}
#   cancel-in-progress: true

# # Declare default permissions as read only.
# permissions: read-all

# jobs:
#   matrix_prep:
#     runs-on: ubuntu-latest
#     outputs:
#       matrix: ${{ steps.set-matrix.outputs.matrix }}
#     steps:
#       - name: Harden Runner
#         uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
#         with:
#           egress-policy: audit

#       - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
#       - uses: JoshuaTheMiller/conditional-build-matrix@81b51eb8d89e07b86404934b5fecde1cea1163a5 # v2.0.1        
#         id: set-matrix
#         with:
#           inputFile: '.github/matrix_includes.json'
#           filter: '[?runOnBranch==`always`]'

#   test:
#     needs: [ matrix_prep ]
#     runs-on: ${{ matrix.runs_on }}
#     continue-on-error: true
#     strategy:
#       matrix: ${{ fromJson(needs.matrix_prep.outputs.matrix) }}

#     steps:
#       - name: Harden Runner
#         uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
#         with:
#           egress-policy: audit

#       - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

#       - name: Set up Python
#         uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
#         with:
#           python-version: '3.11'
#           cache: 'pip'

#       - name: Install pip dependencies
#         run: |
#             pip install --upgrade pip
#             pip install -r test/requirements.txt

#       - name: Setup vcpkg environment
#         uses: ARM-software/cmsis-actions/vcpkg@f608f32a6d83e90d79e1f2bbb7812fdb94bf1679 # v1
#         with:
#           config: "./test/vcpkg-configuration.json"
#           vcpkg-downloads: "${{ github.workspace }}/.vcpkg/downloads"
#           cache: "-"

#       - name: Activate Arm tool license
#         run: |
#           armlm activate --server https://mdk-preview.keil.arm.com --product KEMDK-COM0
#         working-directory: ./test

#       - name: Binary version info
#         shell: bash
#         run: |
#           csolution${{ matrix.binary_extension }} -V
#           cpackget${{ matrix.binary_extension }} -V
#           cbuild${{ matrix.binary_extension }} -V
#           cbuild2cmake${{ matrix.binary_extension }} -V
#           cbuildgen${{ matrix.binary_extension }} -V

#       - name: Run Test
#         shell: bash
#         continue-on-error: true
#         working-directory: ./test
#         run: |
#           python ./performance/run_tests.py -i ./data -o ./performance_record_${{ matrix.target }}_${{ matrix.arch }}.csv

#       - name: Archive test results
#         if: always()
#         uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
#         with:
#           name: perf_report_${{ matrix.target }}_${{ matrix.arch }}
#           path: ./test/performance_record_${{ matrix.target }}_${{ matrix.arch }}.csv

#   merge_results:
#     runs-on: ubuntu-latest
#     needs: test
#     steps:
#       - name: Harden Runner
#         uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
#         with:
#           egress-policy: audit

#       - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

#       - name: Create Directory for Reports
#         run: mkdir -p perf_reports/curr_reports

#       - name: Download performance report Windows
#         uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # v4.1.9
#         with:
#           name: perf_report_windows_amd64
#           path: perf_reports/curr_reports

#       - name: Download cmsis toolbox linux
#         uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # v4.1.9
#         with:
#           name: perf_report_linux_amd64
#           path: perf_reports/curr_reports

#       - name: Download cmsis toolbox macOs
#         uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # v4.1.9
#         with:
#           name: perf_report_darwin_amd64
#           path: perf_reports/curr_reports

#       - name: Set up Python
#         uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
#         with:
#           python-version: '3.11'
#           cache: 'pip'

#       - name: Install pip dependencies
#         run: |
#             pip install --upgrade pip
#             pip install -r test/requirements.txt

#       - name: Authenticate GitHub CLI
#         shell: bash
#         run: |
#           echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token

#       - name: Get Latest Successful Performance Run ID
#         id: get_run_id
#         shell: bash
#         run: |
#           RUN_ID=$(gh run list --workflow performance --repo soumeh01/cmsis-toolbox --json databaseId,conclusion --jq '[.[] | select(.conclusion=="success") | .databaseId] | first')
#           echo "LAST_SUCCESS_RUN_ID=$RUN_ID" >> $GITHUB_OUTPUT

#       - name: Download soumeh01/cmsis-toolbox performance artifacts
#         if: ${{ steps.get_run_id.outputs.LAST_SUCCESS_RUN_ID != ''}}
#         id: download_prev_perf_artifacts
#         continue-on-error: true
#         shell: bash
#         run : gh run download -D perf_reports/last_run_reports ${{ steps.get_run_id.outputs.Last_SUCCESS_RUN_ID }} -n consolidated_performance_report -R soumeh01/cmsis-toolbox

#       - name: Rename Downloaded artifacts
#         if: steps.download_prev_perf_artifacts.outcome == 'success'
#         shell: bash
#         run : |
#           mv perf_reports/last_run_reports/consolidated_perf_report.csv perf_reports/last_run_reports/last_run_consolidated_performance_report.csv

#       - name: LS CSV files
#         if: always()
#         run: |
#           ls -lR perf_reports

#       - name: Merge CSV files
#         if: always()
#         run: python test/performance/merge.py -d perf_reports

#       - name: Archive test results
#         if: always()
#         uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
#         with:
#           name: Performance_Trend
#           path: ./performance_plot.png

#       - name: Archive performance results
#         if: always()
#         uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
#         with:
#           name: consolidated_performance_report
#           path: ./consolidated_perf_report.csv
